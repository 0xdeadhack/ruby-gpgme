* What's this?

Ruby-GPGME is a Ruby language binding of GPGME (GnuPG Made Easy).

* Requirements

- Ruby 1.8 or later
- GPGME 1.1.2 or later

* API

Ruby-GPGME provides 3 levels of API.  The highest level API is close
to the command line interface of GnuPG.  The lowest level API is close
to the C interface of GPGME.

** The highest level API

For example, it can be written in the highest level API to create a
cleartext signature of the plaintext from stdin.

 $ eval `gpg-agent --daemon`
 $ ruby -rgpgme -e 'GPGME.clearsign($stdin, $stdout)'

Or

 $ ruby -rgpgme -e 'puts GPGME.clearsign($stdin)'

Or

 $ ruby -rgpgme -e 'puts GPGME.clearsign("a string read from stdin")'

This API would be sufficient for typical use cases.

** The lowest level API

On the other hand, the same example can be rewritten in the lowest
level API.

 $ eval `gpg-agent --daemon`
 $ ruby -rgpgme -e <<End  
 ret = Array.new
 GPGME::gpgme_new(ret)
 ctx = ret.shift
 GPGME::gpgme_data_new_from_fd(ret, 0)
 plain = ret.shift
 GPGME::gpgme_data_new_from_fd(ret, 1)
 sig = ret.shift
 GPGME::gpgme_op_sign(ctx, plain, sig, GPGME::SIG_MODE_CLEAR)
 End

As you see, it is much harder to write a program in this API than the
highest level API.  However, if you are already familier with the C
interface of GPGME and/or want to control detailed behavior of
GPGME, it might be useful.

** The intermediate API

There is also intermediate level API which looks object-oriented.

 $ eval `gpg-agent --daemon`
 $ ruby -rgpgme -e <<End  
 ctx = GPGME::Ctx.new
 plain = GPGME::Data.from_io($stdin)
 sig = GPGME::Data.from_io($stdout)
 ctx.sign(plain, sig, GPGME::SIG_MODE_CLEAR)
 End

It is easier to use than the lowest level API though, you should first
consult the highest level API.
